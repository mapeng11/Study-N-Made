/*주석 달기. 스타일 적용할 때, figure를 한 번에 정리해서 변수처리 후 디자인에 사용*/
    
/*브라우저를 접속할 때, 해당 css파일을 다운로드하게 됨.
네트워크 상으로만 봤을 때는 css언어를 html에 내장하는 것이 효율적임.
하지만, 해당 css파일을 캐싱함으로써 해당 css언어를 다시 로딩하지 않고 해당 파일로 불러옴으로써
엄청난 트래픽 절약과 효용성을 불러올 수 있음.*/

    a{color:red;   /*a 는 선택자라고 함. 그 사이는 효과. declaration 라고 함.*/
      /*color:red 는 property:value 형태임.*/
    text-decoration: none; /*밑줄 데코레이션 없애기 / 한 곳에만 넣고 싶으면 style="text-decoration:underline" 하면 됨.*/
    } 
    h1 {
      font-size:45px;
      text-align: center;  
      border-bottom: 2px solid gray;
      padding: 15px;
      margin: 0px;
      /*선택자의 강함은 태그<클래스<아이디 선택자 순이다. 
      id는 고유한 것이고 가장 구체적이기 때문. -> 디자인 할 때 클래스나 id로 고유의 디자인을 주는 것이 편함.*/
    }
    ol {
      border-right: 2px solid gray;
      width:100px;
      margin:0;
      padding:20px;
    }
    #name2 {
      color: yellow;
    }
    .name {  /*name이라고만 하면 안되고 앞에 점을 붙여야 클래스라는 것을 인식.*/
      color:pink; /*name2 id 보다 최근에 명령이 들어가서 원래는 핑크가 되어야 하지만
      id가 더 우선순위에 있으므로 노란색이 됨.*/
    }
    #grid{
      display: grid;
      grid-template-columns: 150px 1fr;
    }
    #grid ol{ /*grid 아이디 내에 포함된 ol이라는 뜻.*/
      padding-left: 30px;
    }
    #article{
      padding: 15px;
    }
    @media(max-width:800px) { /*미디어 쿼리 기준은 다양하게 존재함.*/
      #grid{
        display: block;
      }
      ol {
      border-right: none;
      }
      h1 {
        border-bottom: none;
      }
    }
    
      